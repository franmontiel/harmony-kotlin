apply plugin: 'com.android.library'
apply from: 'buildsystem/dependencies.gradle'

android {
  compileSdkVersion rootProject.ext.androidCompileSdkVersion
  buildToolsVersion rootProject.ext.androidBuildToolsVersion

  lintOptions {
    abortOnError false
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  defaultConfig {
    minSdkVersion rootProject.ext.androidMinSdkVersion
    targetSdkVersion rootProject.ext.androidTargetSdkVersion

    versionCode 1001

    vectorDrawables.useSupportLibrary = true
  }

  buildTypes {
    debug {
      buildConfigField "boolean", "DEBUG_JOB_MANAGER", "true"
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL", "15" // minutes
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL_FLEX", "15" // minutes
    }

    debugRelease {
      debuggable = true
      buildConfigField "boolean", "DEBUG_JOB_MANAGER", "true"
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL", "15" // minutes
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL_FLEX", "15" // minutes
    }

    release {
      buildConfigField "boolean", "DEBUG_JOB_MANAGER", "false"
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL", "15" // minutes
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL_FLEX", "15" // minutes
    }
  }

  buildTypes.all { buildType ->
    // Common constants values
    buildConfigField "String", "WORLDREADER_OAUTH_CLIENT_ID", '"worldreader"'
    buildConfigField "String", "WORLDREADER_OAUTH_CLIENT_SECRET", '"MGQUm2oNtyaHCBhV2J6YvLFmRRWZF4ry"'
  }
}

dependencies {
  def dependencies = project.ext.dependencies

  compile dependencies.appCompat
  compile dependencies.supportAnnotation
  compile dependencies.recyclerView
  compile dependencies.cardView
  compile dependencies.design
  compile dependencies.constraintLayout

  compile dependencies.picasso
  compile dependencies.picassoOkhttp3
  compile dependencies.simpleStorage

  compile dependencies.guava
  compile dependencies.joda
  compile dependencies.logger
  compile dependencies.javaxAnnotation
  compile dependencies.javaxinject
  compile dependencies.vastra
  compile dependencies.storio
  compile dependencies.storioAnnotation
  annotationProcessor dependencies.storioAnnotationProcessor

  compile(dependencies.materialDialogsCore) { transitive = true }
  compile(dependencies.materialDialogsCommons) { transitive = true }

  compile dependencies.dagger
  annotationProcessor dependencies.daggerCompiler

  compile dependencies.okHttp
  compile dependencies.okHttp3LoggingInterceptor

  compile dependencies.retrofit2
  compile dependencies.retrofit2Gson
  compile(dependencies.retrofitSimpleXml) {
    exclude module: 'stax-api'
    exclude module: 'stax'
    exclude module: 'xpp3'
  }
  compile(dependencies.simplexml) {
    exclude module: 'stax'
    exclude module: 'stax-api'
    exclude module: 'xpp3'
  }

  compile dependencies.sqlcipher

  compile 'org.javatuples:javatuples:1.2'

  compile 'net.sourceforge.htmlcleaner:htmlcleaner:2.16'
  compile 'com.osbcp.cssparser:cssparser:1.5'
  compile dependencies.jedi

  compile dependencies.securePreferences
  compile dependencies.androidjob

  compile dependencies.scaleImageView
  compile dependencies.viewpropertyobjectanimator

  compile dependencies.awsCore
  compile dependencies.awsPinpoint

  compile dependencies.networkConnectionClass

  compile dependencies.javaPoet
  compile dependencies.systemUiHelper
  compile dependencies.expandableLayout

}
