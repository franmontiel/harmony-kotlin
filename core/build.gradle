apply plugin: 'com.android.library'
apply from: 'buildsystem/dependencies.gradle'

android {
  compileSdkVersion rootProject.ext.androidCompileSdkVersion
  buildToolsVersion rootProject.ext.androidBuildToolsVersion

  lintOptions {
    abortOnError false
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  defaultConfig {
    minSdkVersion rootProject.ext.androidMinSdkVersion
    targetSdkVersion rootProject.ext.androidTargetSdkVersion

    versionCode 1001

    vectorDrawables.useSupportLibrary = true
  }

  buildTypes {
    debug {
      buildConfigField "boolean", "DEBUG_JOB_MANAGER", "true"
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL", "15" // minutes
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL_FLEX", "15" // minutes
    }

    debugRelease {
      debuggable = true
      buildConfigField "boolean", "DEBUG_JOB_MANAGER", "true"
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL", "15" // minutes
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL_FLEX", "15" // minutes
    }

    release {
      buildConfigField "boolean", "DEBUG_JOB_MANAGER", "false"
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL", "15" // minutes
      buildConfigField "long", "JOB_MANAGER_BACKGROUND_INTERVAL_FLEX", "15" // minutes
    }
  }

  buildTypes.all { buildType ->
    // Common constants values
    buildConfigField "String", "WORLDREADER_OAUTH_CLIENT_ID", '"worldreader"'
    buildConfigField "String", "WORLDREADER_OAUTH_CLIENT_SECRET", '"MGQUm2oNtyaHCBhV2J6YvLFmRRWZF4ry"'
  }
}

dependencies {
  def dependencies = project.ext.dependencies

  api dependencies.appCompat
  api dependencies.supportAnnotation
  api dependencies.recyclerView
  api dependencies.cardView
  api dependencies.design
  api dependencies.constraintLayout

  api dependencies.picasso
  api dependencies.picassoOkhttp3
  api dependencies.simpleStorage

  api dependencies.guava
  api dependencies.joda
  api dependencies.logger
  api dependencies.javaxAnnotation
  api dependencies.javaxinject
  api dependencies.vastra
  api dependencies.storio
  api dependencies.storioAnnotation
  annotationProcessor dependencies.storioAnnotationProcessor

  api(dependencies.materialDialogsCore) { transitive = true }
  api(dependencies.materialDialogsCommons) { transitive = true }

  api dependencies.dagger
  annotationProcessor dependencies.daggerCompiler

  api dependencies.okHttp
  api dependencies.okHttp3LoggingInterceptor

  api dependencies.retrofit2
  api dependencies.retrofit2Gson
  api(dependencies.retrofitSimpleXml) {
    exclude module: 'stax-api'
    exclude module: 'stax'
    exclude module: 'xpp3'
  }
  api(dependencies.simplexml) {
    exclude module: 'stax'
    exclude module: 'stax-api'
    exclude module: 'xpp3'
  }

  api dependencies.sqlcipher

  api 'org.javatuples:javatuples:1.2'

  api 'net.sourceforge.htmlcleaner:htmlcleaner:2.16'
  api 'com.osbcp.cssparser:cssparser:1.5'
  api dependencies.jedi

  api dependencies.securePreferences
  api dependencies.androidjob

  api dependencies.scaleImageView
  api dependencies.viewpropertyobjectanimator

  api dependencies.awsCore
  api dependencies.awsPinpoint
  api dependencies.clevertap
  api dependencies.firebase

  api dependencies.networkConnectionClass

  api dependencies.javaPoet
  api dependencies.systemUiHelper
  api dependencies.expandableLayout

}
